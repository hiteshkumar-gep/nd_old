{"version":3,"sources":["current-user-detail-service.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC;AACvD,IAAI,gBAAgB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC;AAC7D,0BAAsB,yBAAyB,CAAC,CAAA;AAEhD,uBAAmB,sBAAsB,CAAC,CAAA;AAE1C,yBAAmC,wBAAwB,CAAC,CAAA;AAC5D,iCAA2B,qCAAqC,CAAC,CAAA;AAEjE,IAAI,QAAa,CAAC;AAGlB;IAKI,kBAAkB,CAAC,QAAgB;QAC/B,IAAI,GAAQ,CAAC;QACb,IAAI,UAAuB,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;YACzD,GAAG,GAAG,IAAI,CAAC;YACX,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,UAAU,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;;IAED,UAAU,CAAC,GAAG,EAAE,GAAG;QACf,IAAI,UAAuB,CAAC;QAC5B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS;YACzD,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,IAAI,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS;oBACpC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;oBAC5C,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC3D,CAAC,EAAE,CAAC,KAAK;oBACL,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;oBAC5C,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,oBAAoB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAC5C,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAClE,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;IAED,YAAY,CAAC,EAAO;QACZ,IAAI,GAAQ,CAAC;QACb,IAAI,UAAuB,CAAC;QAC5B,IAAI,GAAG,GAAW,EAAE,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;YACxC,GAAG,GAAG,IAAI,CAAC;YACX,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;gBACpC,MAAM,oBAAoB,CAAC;YAC/B,CAAC;YACD,UAAU,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC,CAAC,CAAC;IACX,CAAC;;IACD,eAAe,CAAC,KAAU,EAAE,KAAU;QAC9B,IAAI,GAAQ,CAAC;QACb,IAAI,UAAuB,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;YACrD,GAAG,GAAG,IAAI,CAAC;YACX,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;gBACpC,MAAM,oBAAoB,CAAC;YAC/B,CAAC;YACD,UAAU,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC,CAAC,CAAC;IACX,CAAC;;IAED,aAAa,CAAC,UAAU;QAChB,IAAI,GAAQ,CAAC;QACb,IAAI,UAAuB,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;YAC5C,GAAG,GAAG,IAAI,CAAC;YACX,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;gBACpC,MAAM,oBAAoB,CAAC;YAC/B,CAAC;YACD,UAAU,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC,CAAC,CAAC;IACX,CAAC;;IAED,kBAAkB,CAAC,EAAE,EAAE,UAAU;QAC7B,IAAI,GAAQ,CAAC;QACb,IAAI,UAAuB,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;YAC/C,GAAG,GAAG,IAAI,CAAC;YACX,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;gBACpC,MAAM,oBAAoB,CAAC;YAC/B,CAAC;YACD,UAAU,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc,CAAC,UAAU;QACrB,MAAM,CAAA;IACV,CAAC;AACL,CAAC;AA1FG;IAAC,eAAM,EAAE;;0DAAA;AAHb;IAAC,iBAAO,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,aAAa,EAAE,mBAAmB,EAAE,CAAC;;4BAAA;AACtD,gCAAwB,2BA4FpC,CAAA","file":"current-user-detail-service.js","sourcesContent":["import * as configUtil from './core/utils';\nimport Q = require('q');\nvar passport = require('passport');\nvar LocalStrategy = require('passport-local').Strategy;\nvar FacebookStrategy = require('passport-facebook').Strategy;\nimport {service} from './di/decorators/service';\nimport {UserDetails} from './security/auth/user-details';\nimport {User} from './security/auth/user';\n\nimport {inject, injectbyname} from './di/decorators/inject';\nimport UserRepository from './tests/repositories/userRepository';\nimport {UserDetailService} from './security/auth/user-detail-service';\nvar userRepo: any;\n\n@service({ 'singleton': true, 'serviceName': 'UserDetailService' })\nexport class CurrentUserDetailService implements UserDetailService {\n\n    @inject()\n    userRepo: UserRepository;\n\n    loadUserByUsername(userName: string): Q.Promise<any> {\n        var usr: any;\n        var userDetail: UserDetails;\n        return this.userRepo.findByField(\"name\", userName).then((user) => {\n            usr = user;\n            if (user == null || user == undefined) {\n                return null;\n            }\n            userDetail = new User(user.name, user.password, user);\n            return userDetail;\n        });\n    };\n\n    getNewUser(req, res){\n        var userDetail: UserDetails;\n        var user = req.body.user;\n         this.userRepo.findByField(\"name\", user.name).then((foundUser) => {\n            if (foundUser == null || foundUser == undefined) {\n                this.createNewUser(user).then((finalUser) => {\n                    res.set(\"Content-Type\", \"application/json\");\n                    res.send(200, JSON.stringify('user created', null, 4));\n                }, (error) => {\n                    res.set(\"Content-Type\", \"application/json\");\n                    res.send(400, JSON.stringify('cannot create user', null, 4));\n                });\n            } else {\n                res.set(\"Content-Type\", \"application/json\");\n                res.send(400, JSON.stringify('user already exists', null, 4));\n            }\n        });\n    };\n\n    loadUserById(id: any): Q.Promise<any> {\n            var usr: any;\n            var userDetail: UserDetails;\n            var _id: string = id; \n            return this.userRepo.findOne(_id).then((user) => {\n                usr = user;\n                if (user == null || user == undefined) {\n                    throw 'user doesnot exist';\n                }\n                userDetail = new User(user.name, user.password, user);\n                return userDetail;\n            });\n    };\n    loadUserByField(field: any, value: any): Q.Promise<any> {\n            var usr: any;\n            var userDetail: UserDetails;\n            return this.userRepo.findByField(field, value).then((user) => {\n                usr = user;\n                if (user == null || user == undefined) {\n                    throw 'user doesnot exist';\n                }\n                userDetail = new User(user.name, user.password, user);\n                return userDetail;\n            });\n    };\n\n    createNewUser(userObject): Q.Promise<any> {\n            var usr: any;\n            var userDetail: UserDetails;\n            return this.userRepo.post(userObject).then((user) => {\n                usr = user;\n                if (user == null || user == undefined) {\n                    throw 'user doesnot exist';\n                }\n                userDetail = new User(user.name, user.password, user);\n                return userDetail;\n            });\n    };\n\n    updateExistingUser(id, userObject): Q.Promise<any> {\n        var usr: any;\n        var userDetail: UserDetails;\n        return this.userRepo.put(id, userObject).then((user) => {\n            usr = user;\n            if (user == null || user == undefined) {\n                throw 'user doesnot exist';\n            }\n            userDetail = new User(user.name, user.password, user);\n            return userDetail;\n        });\n    }\n\n    getCurrentUser(sessionsId): Q.Promise<any> {\n        return \n    }\n}"],"sourceRoot":"/source/"}