{"version":3,"sources":["worker.ts"],"names":[],"mappings":"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","file":"worker.js","sourcesContent":["require(\"reflect-metadata/Reflect\");\nimport * as Config from \"./config\";\nimport * as securityConfig from \"./security-config\";\nimport * as data from \"./mongoose\";\nimport { Decorators } from './core/constants/decorators';\nimport { MetaUtils } from \"./core/metadata/utils\";\nimport {MetaData, IMetaOptions} from \"./core/metadata/metadata\";\nimport {PrincipalContext} from './security/auth/principalContext';\nimport * as Utils from \"./core/utils\";\nimport {winstonLog} from './logging/winstonLog';\nimport {Container} from './di';\nimport {responseDetails} from './core/decorators/interfaces/response';\nimport * as express from \"express\";\nimport * as Enumerable from 'linq';\nimport {workerParamsDto} from \"./core/decorators/interfaces/workerParamsDto\";\nvar Main = require(\"./core\");\nvar domain = require('domain');\nconst test = require('./unit-test/services/blogServiceImpl'); // Test Service i.e. BlogService required for testing in Jasmine.\n\nfunction intiliaze(params: workerParamsDto) {\n    try {\n        winstonLog.logInfo(\"+++++++++++++++++++ =======\\n +++++++++++ Wroker executed +++++++++++ \\n +++++++++++++++++++ =======\");\n        const app = express();\n        Config.Config.ignorePaths = Config.Config.ignorePaths || [];\n        Config.Config.ignorePaths.push('**/server.js', '**/worker.js')\n        Main(Config, securityConfig, __dirname, data.entityServiceInst);\n        data.connect();\n        data.generateSchema();\n        Main.register(app);\n        params.status = Utils.ProcessStatus.success;\n        params.message = \"Initialized succesfully\";\n    }\n    catch (exc) {\n        params.status = Utils.ProcessStatus.failure;\n        params.message = \"Error found in initialization : \" + exc;\n    }\n    winstonLog.logInfo(params.message);\n    process.send(params);\n}\n\nfunction execute(params: workerParamsDto) {\n    try {\n        winstonLog.logInfo('executing child process');\n        var d = domain.create();\n        d.run(() => {\n            MetaUtils.childProcessId = process.pid;\n\n            var services = MetaUtils.getMetaDataForDecorators([Decorators.SERVICE]);\n            var service = Enumerable.from(services).where(x => x.metadata[0].params.serviceName == params.serviceName).select(x => x.metadata[0]).firstOrDefault();\n            var serviceName = params.serviceName;\n\n            //Setting up Principal context for the new process.\n            var principalContext = params.principalContext;\n            for (var i in principalContext) {\n                var key = i;\n                var val = principalContext[i];\n                PrincipalContext.save(key, val);\n            }\n            PrincipalContext.save('workerParams', params);\n            winstonLog.logInfo('done default properties of principal context');\n            if (service) {\n                var injectedProp = Container.resolve(service.params.target);\n                winstonLog.logInfo('Service instance: ' + injectedProp);\n                var methodName = params.servicemethodName;\n                winstonLog.logInfo(\"Method Names: \" + JSON.stringify(methodName));\n                var methodArguments = params.arguments;\n                winstonLog.logInfo(\"arugment Names: \" + methodArguments);\n                try {\n                    var ret = injectedProp[methodName].apply(injectedProp, methodArguments);\n                    if (Utils.isPromise(ret)) {\n                        ret.then(res => {\n                            params.message = \"Target Method executed\";\n                            params.status = Utils.ProcessStatus.success;\n                            sendMessage(params);\n                        }).catch(exc => {\n                            params.message = exc;\n                            params.status = Utils.ProcessStatus.failure;\n                            sendMessage(params);\n                        });\n                    } else {\n                        params.message = \"Target Method executed\";\n                        params.status = Utils.ProcessStatus.success;\n                        sendMessage(params);\n                    }\n                }\n                catch (exc) {\n                    params.message = exc;\n                    params.status = Utils.ProcessStatus.failure;\n                    sendMessage(params);\n                }\n            }\n            else {\n                params.message = \"No service found.\";\n                params.status = Utils.ProcessStatus.success;\n                sendMessage(params);\n            }\n        });\n    }\n    catch (exc) {\n        params.status = Utils.ProcessStatus.failure;\n        params.message = exc;\n        sendMessage(params);\n    }\n}\n\nfunction sendMessage(params: workerParamsDto) {\n    winstonLog.logInfo(params.message);\n    process.send(params);\n}\n\nprocess.on('message', function (m) {\n    console.log(m);\n    var params = <workerParamsDto>m;\n    if (params.initialize) {\n        console.log('initializing');\n        intiliaze(params);\n    }\n    else {\n        console.log('executing');\n        execute(params);\n    }\n});\n"],"sourceRoot":"/source/"}